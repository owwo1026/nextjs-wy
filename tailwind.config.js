/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ['./src/**/*.{html,js}'],
  darkMode: false,
  theme: {
    screens: {
      xs: '480px',
      sm: '640px',
      md: '768px',
      lg: '1024px',
      xl: '1280px',
      '2xl': '1536px',
      '3xl': '1920px',
      '4xl': '2560px', // only need to control product grid mode in ultra 4k device
    },
    colors: {
      enabled: '#118D57',
      disabled: '#7B8093',
      white: '#ffffff',
      black: '#000000',
      current: 'currentColor',
      transparent: 'transparent',
      gray: {
        0: 'rgb(var(--gray-0) / <alpha-value>)',
        50: 'rgb(var(--gray-50) / <alpha-value>)',
        100: 'rgb(var(--gray-100) / <alpha-value>)',
        200: 'rgb(var(--gray-200) / <alpha-value>)',
        300: 'rgb(var(--gray-300) / <alpha-value>)',
        400: 'rgb(var(--gray-400) / <alpha-value>)',
        500: 'rgb(var(--gray-500) / <alpha-value>)',
        600: 'rgb(var(--gray-600) / <alpha-value>)',
        700: 'rgb(var(--gray-700) / <alpha-value>)',
        800: 'rgb(var(--gray-800) / <alpha-value>)',
        900: 'rgb(var(--gray-900) / <alpha-value>)',
        1000: 'rgb(var(--gray-1000) / <alpha-value>)',
      },
      primary: {
        lighter: 'rgb(var(--primary-lighter) / <alpha-value>)',
        light: 'rgb(var(--primary-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--primary-default) / <alpha-value>)',
        dark: 'rgb(var(--primary-dark) / <alpha-value>)',
      },
      secondary: {
        lighter: 'rgb(var(--secondary-lighter) / <alpha-value>)',
        light: 'rgb(var(--secondary-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--secondary-default) / <alpha-value>)',
        dark: 'rgb(var(--secondary-dark) / <alpha-value>)',
      },
      red: {
        lighter: 'rgb(var(--red-lighter) / <alpha-value>)',
        light: 'rgb(var(--red-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--red-default) / <alpha-value>)',
        dark: 'rgb(var(--red-dark) / <alpha-value>)',
      },
      orange: {
        lighter: 'rgb(var(--orange-lighter) / <alpha-value>)',
        light: 'rgb(var(--orange-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--orange-default) / <alpha-value>)',
        dark: 'rgb(var(--orange-dark) / <alpha-value>)',
      },
      blue: {
        lighter: 'rgb(var(--blue-lighter) / <alpha-value>)',
        light: 'rgb(var(--blue-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--blue-default) / <alpha-value>)',
        dark: 'rgb(var(--blue-dark) / <alpha-value>)',
      },
      green: {
        lighter: 'rgb(var(--green-lighter) / <alpha-value>)',
        light: 'rgb(var(--green-light) / <alpha-value>)',
        DEFAULT: 'rgb(var(--green-default) / <alpha-value>)',
        dark: 'rgb(var(--green-dark) / <alpha-value>)',
      },
    },
    extend: {},
  },
  plugins: [],
};
